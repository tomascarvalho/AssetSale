{
  "contractName": "AssetCrowdsale",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOpen",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "withdrawTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "capReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goalReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "finalized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "claimRefund",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "openingTime",
          "type": "uint256"
        },
        {
          "name": "closingTime",
          "type": "uint256"
        },
        {
          "name": "rate",
          "type": "uint256"
        },
        {
          "name": "wallet",
          "type": "address"
        },
        {
          "name": "cap",
          "type": "uint256"
        },
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "goal",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "CrowdsaleFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b5060405160e08062001f8b833981018060405281019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050508281888888888760016000819055506000831115156200009057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515620000cd57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156200010a57600080fd5b8260038190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050428210151515620001a657600080fd5b8181111515620001b557600080fd5b816005819055508060068190555050506000600760006101000a81548160ff021916908315150217905550600081111515620001f057600080fd5b62000209620002e4640100000000026401000000009004565b620002136200030e565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f08015801562000266573d6000803e3d6000fd5b50600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060088190555050600081111515620002bf57600080fd5b80600b8190555050828111151515620002d757600080fd5b505050505050506200031f565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b604051610d20806200126b83390190565b610f3c806200032f6000396000f3006080604052600436106100fc576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631515bc2b146101075780632c4e722e14610136578063355274ea14610161578063401938831461018c5780634042b66f146101b757806347535d7b146101e257806349df728c146102115780634b6753bc146102545780634bb278f31461027f5780634f93594514610296578063521eb273146102c557806370a082311461031c5780637d3d652214610373578063b3f05b97146103a2578063b7a8807c146103d1578063bffa55d5146103fc578063ec8ac4d81461043f578063fc0c546a14610475575b610105336104cc565b005b34801561011357600080fd5b5061011c6105c2565b604051808215151515815260200191505060405180910390f35b34801561014257600080fd5b5061014b6105ce565b6040518082815260200191505060405180910390f35b34801561016d57600080fd5b506101766105d8565b6040518082815260200191505060405180910390f35b34801561019857600080fd5b506101a16105e2565b6040518082815260200191505060405180910390f35b3480156101c357600080fd5b506101cc6105ec565b6040518082815260200191505060405180910390f35b3480156101ee57600080fd5b506101f76105f6565b604051808215151515815260200191505060405180910390f35b34801561021d57600080fd5b50610252600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610611565b005b34801561026057600080fd5b506102696106ca565b6040518082815260200191505060405180910390f35b34801561028b57600080fd5b506102946106d4565b005b3480156102a257600080fd5b506102ab610754565b604051808215151515815260200191505060405180910390f35b3480156102d157600080fd5b506102da610768565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032857600080fd5b5061035d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610792565b6040518082815260200191505060405180910390f35b34801561037f57600080fd5b506103886107db565b604051808215151515815260200191505060405180910390f35b3480156103ae57600080fd5b506103b76107ef565b604051808215151515815260200191505060405180910390f35b3480156103dd57600080fd5b506103e6610806565b6040518082815260200191505060405180910390f35b34801561040857600080fd5b5061043d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610810565b005b610473600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104cc565b005b34801561048157600080fd5b5061048a61090f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008060006001600080828254019250508190555060005490503492506104f38484610939565b6104fc83610971565b91506105138360045461098f90919063ffffffff16565b60048190555061052384836109b0565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8585604051808381526020018281526020019250505060405180910390a361059a8484610a49565b6105a2610a4d565b6105ac8484610b25565b600054811415156105bc57600080fd5b50505050565b60006006544211905090565b6000600354905090565b6000600b54905090565b6000600854905090565b6000600454905090565b6000600554421015801561060c57506006544211155b905090565b600061061b6105c2565b151561062657600080fd5b600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111151561067757600080fd5b6000600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506106c68282610b29565b5050565b6000600654905090565b600760009054906101000a900460ff161515156106f057600080fd5b6106f86105c2565b151561070357600080fd5b6001600760006101000a81548160ff021916908315150217905550610726610b7a565b7f9270cc390c096600a1c17c44345a1ba689fafd99d97487b10cfccf86cf73183660405160405180910390a1565b6000600b546107616105ec565b1015905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006008546107e86105ec565b1015905090565b6000600760009054906101000a900460ff16905090565b6000600554905090565b6108186107ef565b151561082357600080fd5b61082b6107db565b15151561083757600080fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351cff8d9826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156108f457600080fd5b505af1158015610908573d6000803e3d6000fd5b5050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6109438282610d71565b600b54610960826109526105ec565b61098f90919063ffffffff16565b1115151561096d57600080fd5b5050565b600061098860035483610d9290919063ffffffff16565b9050919050565b60008082840190508381101515156109a657600080fd5b8091505092915050565b610a0281600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461098f90919063ffffffff16565b600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b5050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f340fa0134336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506000604051808303818588803b158015610b0a57600080fd5b505af1158015610b1e573d6000803e3d6000fd5b5050505050565b5050565b610b768282600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610dd09092919063ffffffff16565b5050565b610b826107db565b15610cc857600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343d726d66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610c0d57600080fd5b505af1158015610c21573d6000803e3d6000fd5b50505050600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639af6549a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610cab57600080fd5b505af1158015610cbf573d6000803e3d6000fd5b50505050610d67565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c52dc416040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610d4e57600080fd5b505af1158015610d62573d6000803e3d6000fd5b505050505b610d6f610ebe565b565b610d796105f6565b1515610d8457600080fd5b610d8e8282610ec0565b5050565b6000806000841415610da75760009150610dc9565b8284029050828482811515610db857fe5b04141515610dc557600080fd5b8091505b5092915050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610e7357600080fd5b505af1158015610e87573d6000803e3d6000fd5b505050506040513d6020811015610e9d57600080fd5b81019080805190602001909291905050501515610eb957600080fd5b505050565b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610efc57600080fd5b60008114151515610f0c57600080fd5b50505600a165627a7a723058206b82755f93f842e14b967a2e1ad72e2d52ee60742768353f5fe91de0807cf98a0029608060405234801561001057600080fd5b50604051602080610d2083398101806040528101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f4101e71e974f68df5e9730cc223280b41654676bbb052cdcc735c3337e64d2d96000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561013357600080fd5b80600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260006101000a81548160ff0219169083600281111561019357fe5b021790555050610b78806101a86000396000f3006080604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632348238c146100b457806338af3eed146100f757806343d726d61461014e57806351cff8d914610165578063685ca194146101a85780638c52dc41146102035780639af6549a1461021a578063c19d93fb14610231578063c6dbdf611461026a578063e3a9db1a146102c1578063f340fa0114610318575b600080fd5b3480156100c057600080fd5b506100f5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061034e565b005b34801561010357600080fd5b5061010c6104ac565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561015a57600080fd5b506101636104d6565b005b34801561017157600080fd5b506101a6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105b6565b005b3480156101b457600080fd5b506101e9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105d6565b604051808215151515815260200191505060405180910390f35b34801561020f57600080fd5b50610218610608565b005b34801561022657600080fd5b5061022f6106e9565b005b34801561023d57600080fd5b5061024661079e565b6040518082600281111561025657fe5b60ff16815260200191505060405180910390f35b34801561027657600080fd5b5061027f6107b5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102cd57600080fd5b50610302600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107de565b6040518082815260200191505060405180910390f35b61034c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610827565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103a957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156103e557600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f4101e71e974f68df5e9730cc223280b41654676bbb052cdcc735c3337e64d2d96000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561053157600080fd5b6000600281111561053e57fe5b600260009054906101000a900460ff16600281111561055957fe5b14151561056557600080fd5b60028060006101000a81548160ff0219169083600281111561058357fe5b02179055507f088672c3a6e342f7cd94a65ba63b79df24a8973927b4d05d803c44bbf787d12f60405160405180910390a1565b6105bf816105d6565b15156105ca57600080fd5b6105d381610867565b50565b6000600160028111156105e557fe5b600260009054906101000a900460ff16600281111561060057fe5b149050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561066357600080fd5b6000600281111561067057fe5b600260009054906101000a900460ff16600281111561068b57fe5b14151561069757600080fd5b6001600260006101000a81548160ff021916908360028111156106b657fe5b02179055507f599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b8960405160405180910390a1565b6002808111156106f557fe5b600260009054906101000a900460ff16600281111561071057fe5b14151561071c57600080fd5b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f1935050505015801561079b573d6000803e3d6000fd5b50565b6000600260009054906101000a900460ff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600281111561083457fe5b600260009054906101000a900460ff16600281111561084f57fe5b14151561085b57600080fd5b610864816109e4565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156108c457600080fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610991573d6000803e3d6000fd5b508173ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040518082815260200191505060405180910390a25050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a4157600080fd5b349050610a9681600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b2b90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4826040518082815260200191505060405180910390a25050565b6000808284019050838110151515610b4257600080fd5b80915050929150505600a165627a7a72305820fb0e2098cf4b2bc57191a77146629c29b7cda8f1f64c799c7d7e37fb5fdb8d4d0029",
  "deployedBytecode": "0x6080604052600436106100fc576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631515bc2b146101075780632c4e722e14610136578063355274ea14610161578063401938831461018c5780634042b66f146101b757806347535d7b146101e257806349df728c146102115780634b6753bc146102545780634bb278f31461027f5780634f93594514610296578063521eb273146102c557806370a082311461031c5780637d3d652214610373578063b3f05b97146103a2578063b7a8807c146103d1578063bffa55d5146103fc578063ec8ac4d81461043f578063fc0c546a14610475575b610105336104cc565b005b34801561011357600080fd5b5061011c6105c2565b604051808215151515815260200191505060405180910390f35b34801561014257600080fd5b5061014b6105ce565b6040518082815260200191505060405180910390f35b34801561016d57600080fd5b506101766105d8565b6040518082815260200191505060405180910390f35b34801561019857600080fd5b506101a16105e2565b6040518082815260200191505060405180910390f35b3480156101c357600080fd5b506101cc6105ec565b6040518082815260200191505060405180910390f35b3480156101ee57600080fd5b506101f76105f6565b604051808215151515815260200191505060405180910390f35b34801561021d57600080fd5b50610252600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610611565b005b34801561026057600080fd5b506102696106ca565b6040518082815260200191505060405180910390f35b34801561028b57600080fd5b506102946106d4565b005b3480156102a257600080fd5b506102ab610754565b604051808215151515815260200191505060405180910390f35b3480156102d157600080fd5b506102da610768565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032857600080fd5b5061035d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610792565b6040518082815260200191505060405180910390f35b34801561037f57600080fd5b506103886107db565b604051808215151515815260200191505060405180910390f35b3480156103ae57600080fd5b506103b76107ef565b604051808215151515815260200191505060405180910390f35b3480156103dd57600080fd5b506103e6610806565b6040518082815260200191505060405180910390f35b34801561040857600080fd5b5061043d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610810565b005b610473600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104cc565b005b34801561048157600080fd5b5061048a61090f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008060006001600080828254019250508190555060005490503492506104f38484610939565b6104fc83610971565b91506105138360045461098f90919063ffffffff16565b60048190555061052384836109b0565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8585604051808381526020018281526020019250505060405180910390a361059a8484610a49565b6105a2610a4d565b6105ac8484610b25565b600054811415156105bc57600080fd5b50505050565b60006006544211905090565b6000600354905090565b6000600b54905090565b6000600854905090565b6000600454905090565b6000600554421015801561060c57506006544211155b905090565b600061061b6105c2565b151561062657600080fd5b600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111151561067757600080fd5b6000600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506106c68282610b29565b5050565b6000600654905090565b600760009054906101000a900460ff161515156106f057600080fd5b6106f86105c2565b151561070357600080fd5b6001600760006101000a81548160ff021916908315150217905550610726610b7a565b7f9270cc390c096600a1c17c44345a1ba689fafd99d97487b10cfccf86cf73183660405160405180910390a1565b6000600b546107616105ec565b1015905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006008546107e86105ec565b1015905090565b6000600760009054906101000a900460ff16905090565b6000600554905090565b6108186107ef565b151561082357600080fd5b61082b6107db565b15151561083757600080fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351cff8d9826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156108f457600080fd5b505af1158015610908573d6000803e3d6000fd5b5050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6109438282610d71565b600b54610960826109526105ec565b61098f90919063ffffffff16565b1115151561096d57600080fd5b5050565b600061098860035483610d9290919063ffffffff16565b9050919050565b60008082840190508381101515156109a657600080fd5b8091505092915050565b610a0281600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461098f90919063ffffffff16565b600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b5050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f340fa0134336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506000604051808303818588803b158015610b0a57600080fd5b505af1158015610b1e573d6000803e3d6000fd5b5050505050565b5050565b610b768282600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610dd09092919063ffffffff16565b5050565b610b826107db565b15610cc857600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343d726d66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610c0d57600080fd5b505af1158015610c21573d6000803e3d6000fd5b50505050600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639af6549a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610cab57600080fd5b505af1158015610cbf573d6000803e3d6000fd5b50505050610d67565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c52dc416040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610d4e57600080fd5b505af1158015610d62573d6000803e3d6000fd5b505050505b610d6f610ebe565b565b610d796105f6565b1515610d8457600080fd5b610d8e8282610ec0565b5050565b6000806000841415610da75760009150610dc9565b8284029050828482811515610db857fe5b04141515610dc557600080fd5b8091505b5092915050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610e7357600080fd5b505af1158015610e87573d6000803e3d6000fd5b505050506040513d6020811015610e9d57600080fd5b81019080805190602001909291905050501515610eb957600080fd5b505050565b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610efc57600080fd5b60008114151515610f0c57600080fd5b50505600a165627a7a723058206b82755f93f842e14b967a2e1ad72e2d52ee60742768353f5fe91de0807cf98a0029",
  "sourceMap": "2923:682:0:-;;;3031:572;8:9:-1;5:2;;;30:1;27;20:12;5:2;3031:572:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3424:3;3293:4;3378:11;3391;3220:4;3226:6;3234:5;559:1:19;543:13;:17;;;;2322:1:3;2315:4;:8;2307:17;;;;;;;;2356:1;2338:20;;:6;:20;;;;2330:29;;;;;;;;2390:1;2373:19;;:5;:19;;;;2365:28;;;;;;;;2408:4;2400:5;:12;;;;2428:6;2418:7;;:16;;;;;;;;;;;;;;;;;;2449:5;2440:6;;:14;;;;;;;;;;;;;;;;;;2236:223;;;772:15:8;757:11;:30;;749:39;;;;;;;;816:11;802;:25;794:34;;;;;;;;850:11;835:12;:26;;;;882:11;867:12;:26;;;;622:276;;442:5:4;429:10;;:18;;;;;;;;;;;;;;;;;;1535:1:6;1528:4;:8;1520:17;;;;;;;;1570:8;:6;;;:8;;;:::i;:::-;1553:26;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1553:26:6;1543:7;;:36;;;;;;;;;;;;;;;;;;1593:4;1585:5;:12;;;;1479:123;472:1:7;466:3;:7;458:16;;;;;;;;487:3;480:4;:10;;;;418:77;3594:3:0;3586:4;:11;;3578:20;;;;;;;;3031:572;;;;;;;2923:682;;3111:72:3;3149:7;3171;;;;;;;;;;;3164:14;;3111:72;:::o;2923:682:0:-;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "2923:682:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2897:21:3;2907:10;2897:9;:21::i;:::-;2923:682:0;1594:154:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1594:154:8;;;;;;;;;;;;;;;;;;;;;;;;;;;3260:68:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3260:68:3;;;;;;;;;;;;;;;;;;;;;;;550:66:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;550:66:7;;;;;;;;;;;;;;;;;;;;;;;1676:68:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1676:68:6;;;;;;;;;;;;;;;;;;;;;;;3383:79:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3383:79:3;;;;;;;;;;;;;;;;;;;;;;;1253:187:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1253:187:8;;;;;;;;;;;;;;;;;;;;;;;;;;;495:226:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;495:226:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;1094:82:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1094:82:8;;;;;;;;;;;;;;;;;;;;;;;758:161:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;758:161:4;;;;;;724:86:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;724:86:7;;;;;;;;;;;;;;;;;;;;;;;;;;;3111:72:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3111:72:3;;;;;;;;;;;;;;;;;;;;;;;;;;;777:101:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;777:101:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2144:88:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2144:88:6;;;;;;;;;;;;;;;;;;;;;;;;;;;534:76:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;534:76:4;;;;;;;;;;;;;;;;;;;;;;;;;;;955:82:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;955:82:8;;;;;;;;;;;;;;;;;;;;;;;1886:145:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1886:145:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;3705:588:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;2974:69;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2974:69:3;;;;;;;;;;;;;;;;;;;;;;;;;;;3705:588;3780:17;3910:14;978:20:19;971:1;954:13;;:18;;;;;;;;;;;1001:13;;978:36;;3800:9:3;3780:29;;3815:44;3836:11;3849:9;3815:20;:44::i;:::-;3927:26;3943:9;3927:15;:26::i;:::-;3910:43;;3993:25;4008:9;3993:10;;:14;;:25;;;;:::i;:::-;3980:10;:38;;;;4025:37;4042:11;4055:6;4025:16;:37::i;:::-;4114:11;4073:89;;4096:10;4073:89;;;4133:9;4150:6;4073:89;;;;;;;;;;;;;;;;;;;;;;;;4169:46;4192:11;4205:9;4169:22;:46::i;:::-;4222:15;:13;:15::i;:::-;4243:45;4265:11;4278:9;4243:21;:45::i;:::-;1051:13:19;;1035:12;:29;1027:38;;;;;;;;3705:588:3;;;;:::o;1594:154:8:-;1636:4;1731:12;;1713:15;:30;1706:37;;1594:154;:::o;3260:68:3:-;3296:7;3318:5;;3311:12;;3260:68;:::o;550:66:7:-;585:7;607:4;;600:11;;550:66;:::o;1676:68:6:-;1712:7;1734:5;;1727:12;;1676:68;:::o;3383:79:3:-;3425:7;3447:10;;3440:17;;3383:79;:::o;1253:187:8:-;1292:4;1388:12;;1369:15;:31;;:66;;;;;1423:12;;1404:15;:31;;1369:66;1362:73;;1253:187;:::o;495:226:5:-;579:14;561:11;:9;:11::i;:::-;553:20;;;;;;;;596:9;:22;606:11;596:22;;;;;;;;;;;;;;;;579:39;;641:1;632:6;:10;624:19;;;;;;;;674:1;649:9;:22;659:11;649:22;;;;;;;;;;;;;;;:26;;;;681:35;696:11;709:6;681:14;:35::i;:::-;495:226;;:::o;1094:82:8:-;1137:7;1159:12;;1152:19;;1094:82;:::o;758:161:4:-;800:10;;;;;;;;;;;799:11;791:20;;;;;;;;825:11;:9;:11::i;:::-;817:20;;;;;;;;857:4;844:10;;:17;;;;;;;;;;;;;;;;;;868:15;:13;:15::i;:::-;894:20;;;;;;;;;;758:161::o;724:86:7:-;767:4;801;;786:11;:9;:11::i;:::-;:19;;779:26;;724:86;:::o;3111:72:3:-;3149:7;3171;;;;;;;;;;;3164:14;;3111:72;:::o;777:101:5:-;833:7;855:9;:18;865:7;855:18;;;;;;;;;;;;;;;;848:25;;777:101;;;:::o;2144:88:6:-;2188:4;2222:5;;2207:11;:9;:11::i;:::-;:20;;2200:27;;2144:88;:::o;534:76:4:-;576:4;595:10;;;;;;;;;;;588:17;;534:76;:::o;955:82:8:-;998:7;1020:12;;1013:19;;955:82;:::o;1886:145:6:-;1949:11;:9;:11::i;:::-;1941:20;;;;;;;;1976:13;:11;:13::i;:::-;1975:14;1967:23;;;;;;;;1997:7;;;;;;;;;;;:16;;;2014:11;1997:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1997:29:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1997:29:6;;;;1886:145;:::o;2974:69:3:-;3011:6;3032;;;;;;;;;;;3025:13;;2974:69;:::o;994:216:7:-;1106:50;1133:11;1146:9;1106:26;:50::i;:::-;1200:4;;1170:26;1186:9;1170:11;:9;:11::i;:::-;:15;;:26;;;;:::i;:::-;:34;;1162:43;;;;;;;;994:216;;:::o;6951:120:3:-;7022:7;7046:20;7060:5;;7046:9;:13;;:20;;;;:::i;:::-;7039:27;;6951:120;;;:::o;1272:131:9:-;1330:7;1345:9;1361:1;1357;:5;1345:17;;1381:1;1376;:6;;1368:15;;;;;;;;1397:1;1390:8;;1272:131;;;;;:::o;1070:170:5:-;1196:39;1223:11;1196:9;:22;1206:11;1196:22;;;;;;;;;;;;;;;;:26;;:39;;;;:::i;:::-;1171:9;:22;1181:11;1171:22;;;;;;;;;;;;;;;:64;;;;1070:170;;:::o;6585:129:3:-;;;:::o;2607:89:6:-;2647:7;;;;;;;;;;;:15;;;2669:9;2680:10;2647:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2647:44:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2647:44:6;;;;;2607:89::o;5394:137:3:-;;;:::o;5792:149::-;5891:45;5911:11;5924;5891:6;;;;;;;;;;;:19;;;;:45;;;;;:::i;:::-;5792:149;;:::o;2317:202:6:-;2361:13;:11;:13::i;:::-;2357:130;;;2384:7;;;;;;;;;;;:13;;;:15;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2384:15:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2384:15:6;;;;2407:7;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2407:29:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2407:29:6;;;;2357:130;;;2457:7;;;;;;;;;;;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2457:23:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2457:23:6;;;;2357:130;2493:21;:19;:21::i;:::-;2317:202::o;1928:185:8:-;425:8;:6;:8::i;:::-;417:17;;;;;;;;2058:50;2085:11;2098:9;2058:26;:50::i;:::-;1928:185;;:::o;204:381:9:-;262:7;523:9;491:1;486;:6;482:35;;;509:1;502:8;;;;482:35;539:1;535;:5;523:17;;563:1;558;554;:5;;;;;;;;:10;546:19;;;;;;;;579:1;572:8;;204:381;;;;;;:::o;407:139:18:-;515:5;:14;;;530:2;534:5;515:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;515:25:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;515:25:18;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;515:25:18;;;;;;;;;;;;;;;;507:34;;;;;;;;407:139;;;:::o;1116:39:4:-;:::o;4938:180:3:-;5081:1;5058:25;;:11;:25;;;;5050:34;;;;;;;;5111:1;5098:9;:14;;5090:23;;;;;;;;4938:180;;:::o",
  "source": "pragma solidity 0.4.24;\n\nimport 'openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol';\nimport 'openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol';\nimport 'openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol';\nimport 'openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol';\nimport 'openzeppelin-solidity/contracts/crowdsale/distribution/PostDeliveryCrowdsale.sol';\nimport 'openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol';\nimport 'openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol';\n/*\ncontract AssetCrowdsale is Crowdsale, TimedCrowdsale, RefundableCrowdsale, PostDeliveryCrowdsale, CappedCrowdsale {\n\n    constructor(\n        uint256 rate,         // rate, in TKNbits\n        address wallet,       // wallet to send Ether\n        ERC20 token,          // the token\n        uint256 cap,            // the cap, in wei\n        uint256 goal,          // total goal, in wei\n        uint256 openingTime,  // opening time in unix epoch seconds\n        uint256 closingTime   // closing time in unix epoch seconds\n    )\n        PostDeliveryCrowdsale()\n        RefundableCrowdsale(goal) // cap and goal are the same, as we want to sell all tokens\n        TimedCrowdsale(openingTime, closingTime)\n        CappedCrowdsale(cap)\n        Crowdsale(rate, wallet, token)\n        public\n    {\n        // nice, we just created a crowdsale that's only open\n        // for a certain amount of time\n        // and stops accepting contributions once it reaches `cap`\n        // and then users can `withdrawTokens()` to get the tokens they're owed\n        // this crowdsale will, if it doesn't hit `goal`, allow everyone to get their money back\n        // by calling claimRefund(...)\n        require(goal <= cap);\n    }\n} */\n\n/**\n * @title SampleCrowdsaleToken\n * @dev Very simple ERC20 Token that can be minted.\n * It is meant to be used in a crowdsale contract.\n */\ncontract AssetCrowdsaleToken is ERC20Mintable, ERC20Detailed {\n  constructor(string name, string symbol) public ERC20Detailed(name, symbol, 18) {}\n}\n\n/**\n * @title SampleCrowdsale\n * @dev This is an example of a fully fledged crowdsale.\n * The way to add new features to a base crowdsale is by multiple inheritance.\n * In this example we are providing following extensions:\n * CappedCrowdsale - sets a max boundary for raised funds\n * RefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\n * MintedCrowdsale - assumes the token can be minted by the crowdsale, which does so\n * when receiving purchases.\n *\n * After adding multiple features it's good practice to run integration tests\n * to ensure that subcontracts works together as intended.\n */\n// XXX There doesn't seem to be a way to split this line that keeps solium\n// happy. See:\n// https://github.com/duaraghav8/Solium/issues/205\n// --elopio - 2018-05-10\n// solium-disable-next-line max-len\ncontract AssetCrowdsale is TimedCrowdsale, RefundableCrowdsale, PostDeliveryCrowdsale, CappedCrowdsale {\n\n  constructor(\n    uint256 openingTime,\n    uint256 closingTime,\n    uint256 rate,\n    address wallet,\n    uint256 cap,\n    ERC20Mintable token,\n    uint256 goal\n  )\n    public\n    Crowdsale(rate, wallet, token)\n    PostDeliveryCrowdsale()\n    RefundableCrowdsale(goal) // cap and goal are the same, as we want to sell all tokens\n    TimedCrowdsale(openingTime, closingTime)\n    CappedCrowdsale(cap)\n  {\n    //As goal needs to be met for a successful crowdsale\n    //the value needs to less or equal than a cap which is limit for accepted funds\n    require(goal <= cap);\n  }\n}\n",
  "sourcePath": "/Users/tomas/Documents/Coisas/technical_challenge/contracts/AssetCrowdsale.sol",
  "ast": {
    "absolutePath": "/Users/tomas/Documents/Coisas/technical_challenge/contracts/AssetCrowdsale.sol",
    "exportedSymbols": {
      "AssetCrowdsale": [
        76
      ],
      "AssetCrowdsaleToken": [
        26
      ]
    },
    "id": 77,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 77,
        "sourceUnit": 539,
        "src": "25:65:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 77,
        "sourceUnit": 878,
        "src": "91:82:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 77,
        "sourceUnit": 806,
        "src": "174:88:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 77,
        "sourceUnit": 990,
        "src": "263:81:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/distribution/PostDeliveryCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/distribution/PostDeliveryCrowdsale.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 77,
        "sourceUnit": 680,
        "src": "345:90:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 77,
        "sourceUnit": 1993,
        "src": "436:71:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 8,
        "nodeType": "ImportDirective",
        "scope": 77,
        "sourceUnit": 1965,
        "src": "508:71:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1992,
              "src": "1975:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$1992",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "1975:13:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1964,
              "src": "1990:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$1964",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "1990:13:0"
          }
        ],
        "contractDependencies": [
          273,
          1906,
          1964,
          1992,
          2061
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsaleToken\n@dev Very simple ERC20 Token that can be minted.\nIt is meant to be used in a crowdsale contract.",
        "fullyImplemented": true,
        "id": 26,
        "linearizedBaseContracts": [
          26,
          1964,
          1992,
          273,
          1906,
          2061
        ],
        "name": "AssetCrowdsaleToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 24,
              "nodeType": "Block",
              "src": "2087:2:0",
              "statements": []
            },
            "documentation": null,
            "id": 25,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 19,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14,
                    "src": "2069:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 20,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16,
                    "src": "2075:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 21,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2083:2:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 22,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 18,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1964,
                  "src": "2055:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$1964_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2055:31:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "2020:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2020:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "2033:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2033:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2019:28:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2087:0:0"
            },
            "scope": 26,
            "src": "2008:81:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 77,
        "src": "1943:148:0"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 27,
              "name": "TimedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 989,
              "src": "2950:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TimedCrowdsale_$989",
                "typeString": "contract TimedCrowdsale"
              }
            },
            "id": 28,
            "nodeType": "InheritanceSpecifier",
            "src": "2950:14:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 29,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 805,
              "src": "2966:19:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$805",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 30,
            "nodeType": "InheritanceSpecifier",
            "src": "2966:19:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 31,
              "name": "PostDeliveryCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 679,
              "src": "2987:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PostDeliveryCrowdsale_$679",
                "typeString": "contract PostDeliveryCrowdsale"
              }
            },
            "id": 32,
            "nodeType": "InheritanceSpecifier",
            "src": "2987:21:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 33,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 877,
              "src": "3010:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$877",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 34,
            "nodeType": "InheritanceSpecifier",
            "src": "3010:15:0"
          }
        ],
        "contractDependencies": [
          538,
          596,
          679,
          805,
          877,
          989,
          2236
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsale\n@dev This is an example of a fully fledged crowdsale.\nThe way to add new features to a base crowdsale is by multiple inheritance.\nIn this example we are providing following extensions:\nCappedCrowdsale - sets a max boundary for raised funds\nRefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\nMintedCrowdsale - assumes the token can be minted by the crowdsale, which does so\nwhen receiving purchases.\n * After adding multiple features it's good practice to run integration tests\nto ensure that subcontracts works together as intended.",
        "fullyImplemented": true,
        "id": 76,
        "linearizedBaseContracts": [
          76,
          877,
          679,
          805,
          596,
          989,
          538,
          2236
        ],
        "name": "AssetCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 74,
              "nodeType": "Block",
              "src": "3431:172:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 69,
                          "name": "goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "3586:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 70,
                          "name": "cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "3594:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3586:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 68,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2254,
                        2255
                      ],
                      "referencedDeclaration": 2254,
                      "src": "3578:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3578:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "3578:20:0"
                }
              ]
            },
            "documentation": null,
            "id": 75,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 51,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40,
                    "src": "3220:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 52,
                    "name": "wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42,
                    "src": "3226:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 53,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46,
                    "src": "3234:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$1992",
                      "typeString": "contract ERC20Mintable"
                    }
                  }
                ],
                "id": 54,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 50,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 538,
                  "src": "3210:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$538_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3210:30:0"
              },
              {
                "arguments": [],
                "id": 56,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 55,
                  "name": "PostDeliveryCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 679,
                  "src": "3245:21:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_PostDeliveryCrowdsale_$679_$",
                    "typeString": "type(contract PostDeliveryCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3245:23:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 58,
                    "name": "goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 48,
                    "src": "3293:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 59,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 57,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 805,
                  "src": "3273:19:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$805_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3273:25:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 61,
                    "name": "openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 36,
                    "src": "3378:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 62,
                    "name": "closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 38,
                    "src": "3391:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 63,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 60,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 989,
                  "src": "3363:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$989_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3363:40:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 65,
                    "name": "cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44,
                    "src": "3424:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 66,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 64,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 877,
                  "src": "3408:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$877_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3408:20:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "name": "openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "3048:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3048:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "name": "closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "3073:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3073:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40,
                  "name": "rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "3098:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3098:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "3116:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3116:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "3136:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3136:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "3153:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Mintable_$1992",
                    "typeString": "contract ERC20Mintable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 45,
                    "name": "ERC20Mintable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1992,
                    "src": "3153:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$1992",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48,
                  "name": "goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "3178:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3178:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3042:152:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3431:0:0"
            },
            "scope": 76,
            "src": "3031:572:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 77,
        "src": "2923:682:0"
      }
    ],
    "src": "0:3606:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/tomas/Documents/Coisas/technical_challenge/contracts/AssetCrowdsale.sol",
    "exportedSymbols": {
      "AssetCrowdsale": [
        76
      ],
      "AssetCrowdsaleToken": [
        26
      ]
    },
    "id": 77,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 77,
        "sourceUnit": 539,
        "src": "25:65:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 77,
        "sourceUnit": 878,
        "src": "91:82:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 77,
        "sourceUnit": 806,
        "src": "174:88:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 77,
        "sourceUnit": 990,
        "src": "263:81:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/distribution/PostDeliveryCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/distribution/PostDeliveryCrowdsale.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 77,
        "sourceUnit": 680,
        "src": "345:90:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 77,
        "sourceUnit": 1993,
        "src": "436:71:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 8,
        "nodeType": "ImportDirective",
        "scope": 77,
        "sourceUnit": 1965,
        "src": "508:71:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1992,
              "src": "1975:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$1992",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "1975:13:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1964,
              "src": "1990:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$1964",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "1990:13:0"
          }
        ],
        "contractDependencies": [
          273,
          1906,
          1964,
          1992,
          2061
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsaleToken\n@dev Very simple ERC20 Token that can be minted.\nIt is meant to be used in a crowdsale contract.",
        "fullyImplemented": true,
        "id": 26,
        "linearizedBaseContracts": [
          26,
          1964,
          1992,
          273,
          1906,
          2061
        ],
        "name": "AssetCrowdsaleToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 24,
              "nodeType": "Block",
              "src": "2087:2:0",
              "statements": []
            },
            "documentation": null,
            "id": 25,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 19,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14,
                    "src": "2069:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 20,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16,
                    "src": "2075:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 21,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2083:2:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 22,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 18,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1964,
                  "src": "2055:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$1964_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2055:31:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "2020:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2020:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "2033:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2033:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2019:28:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2087:0:0"
            },
            "scope": 26,
            "src": "2008:81:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 77,
        "src": "1943:148:0"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 27,
              "name": "TimedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 989,
              "src": "2950:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TimedCrowdsale_$989",
                "typeString": "contract TimedCrowdsale"
              }
            },
            "id": 28,
            "nodeType": "InheritanceSpecifier",
            "src": "2950:14:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 29,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 805,
              "src": "2966:19:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$805",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 30,
            "nodeType": "InheritanceSpecifier",
            "src": "2966:19:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 31,
              "name": "PostDeliveryCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 679,
              "src": "2987:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PostDeliveryCrowdsale_$679",
                "typeString": "contract PostDeliveryCrowdsale"
              }
            },
            "id": 32,
            "nodeType": "InheritanceSpecifier",
            "src": "2987:21:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 33,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 877,
              "src": "3010:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$877",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 34,
            "nodeType": "InheritanceSpecifier",
            "src": "3010:15:0"
          }
        ],
        "contractDependencies": [
          538,
          596,
          679,
          805,
          877,
          989,
          2236
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsale\n@dev This is an example of a fully fledged crowdsale.\nThe way to add new features to a base crowdsale is by multiple inheritance.\nIn this example we are providing following extensions:\nCappedCrowdsale - sets a max boundary for raised funds\nRefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\nMintedCrowdsale - assumes the token can be minted by the crowdsale, which does so\nwhen receiving purchases.\n * After adding multiple features it's good practice to run integration tests\nto ensure that subcontracts works together as intended.",
        "fullyImplemented": true,
        "id": 76,
        "linearizedBaseContracts": [
          76,
          877,
          679,
          805,
          596,
          989,
          538,
          2236
        ],
        "name": "AssetCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 74,
              "nodeType": "Block",
              "src": "3431:172:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 69,
                          "name": "goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "3586:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 70,
                          "name": "cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "3594:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3586:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 68,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2254,
                        2255
                      ],
                      "referencedDeclaration": 2254,
                      "src": "3578:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3578:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "3578:20:0"
                }
              ]
            },
            "documentation": null,
            "id": 75,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 51,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40,
                    "src": "3220:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 52,
                    "name": "wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42,
                    "src": "3226:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 53,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46,
                    "src": "3234:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$1992",
                      "typeString": "contract ERC20Mintable"
                    }
                  }
                ],
                "id": 54,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 50,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 538,
                  "src": "3210:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$538_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3210:30:0"
              },
              {
                "arguments": [],
                "id": 56,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 55,
                  "name": "PostDeliveryCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 679,
                  "src": "3245:21:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_PostDeliveryCrowdsale_$679_$",
                    "typeString": "type(contract PostDeliveryCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3245:23:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 58,
                    "name": "goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 48,
                    "src": "3293:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 59,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 57,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 805,
                  "src": "3273:19:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$805_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3273:25:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 61,
                    "name": "openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 36,
                    "src": "3378:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 62,
                    "name": "closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 38,
                    "src": "3391:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 63,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 60,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 989,
                  "src": "3363:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$989_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3363:40:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 65,
                    "name": "cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44,
                    "src": "3424:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 66,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 64,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 877,
                  "src": "3408:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$877_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3408:20:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "name": "openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "3048:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3048:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "name": "closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "3073:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3073:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40,
                  "name": "rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "3098:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3098:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "3116:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3116:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "3136:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3136:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "3153:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Mintable_$1992",
                    "typeString": "contract ERC20Mintable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 45,
                    "name": "ERC20Mintable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1992,
                    "src": "3153:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$1992",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48,
                  "name": "goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "3178:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3178:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3042:152:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3431:0:0"
            },
            "scope": 76,
            "src": "3031:572:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 77,
        "src": "2923:682:0"
      }
    ],
    "src": "0:3606:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-10-31T16:04:30.969Z"
}